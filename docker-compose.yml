version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15
    container_name: aihub-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-aihub_admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-lLSsdflDFjFjLWSlkLKSDFlsdlksjdLKJSFjk}
      - POSTGRES_DB=${POSTGRES_DB:-aihub}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aihub_admin -d aihub"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Бэкенд FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aihub-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - APP_ENV=production
      - POSTGRES_USER=${POSTGRES_USER:-aihub_admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-lLSsdflDFjFjLWSlkLKSDFlsdlksjdLKJSFjk}
      - POSTGRES_DB=${POSTGRES_DB:-aihub}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-aihub_admin}:${POSTGRES_PASSWORD:-lLSsdflDFjFjLWSlkLKSDFlsdlksjdLKJSFjk}@postgres:5432/${POSTGRES_DB:-aihub}
      - ALLOWED_ORIGINS=http://localhost,http://frontend,http://localhost:80,http://frontend:80
      - SECRET_KEY=${SECRET_KEY:-xJ2p8Lq5NfR7tK3vY9bZ6mD4sA1hC0eG}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-bvnE5jwZLx2h8tQq1rPdK9sF7aW4gYcM0iDu3AoX6pT}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-11520}
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app  # Для разработки - монтируем локальный код
    restart: unless-stopped

  # Фронтенд Vue3 + Vite
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=/api
    container_name: aihub-frontend
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=/api
      - VITE_APP_NAME=${VITE_APP_NAME:-AIHub}
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

# Для хранения данных PostgreSQL
volumes:
  postgres_data: